@model WUI.Models.RaceModel

@{
    ViewBag.Title = "Create";
}

@section css {
    @Styles.Render("~/Content/Race/css")
}

<h2>Création d'une course</h2>

@using (Html.BeginForm("Create", "Race", FormMethod.Post, new { @class = "form-design" }))
{
    // Génère un token dans le cookie d'authentification afin de contrer les
    // attaques de type Cross-site Request forgery
    @Html.AntiForgeryToken();
    
    // Grâce à la propriété "true", on affiche uniquement les erreurs
    // n'étant pas rattachées à la propriété du model (ici RaceModel)
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>RaceModel</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Title, new { @class="form-control", size = "30" })
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Description, new { @class="form-control", placeholder = "20 car. min", size = "30" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateStart)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.DateStart, new { @class="form-control", placeholder = "JJ/MM/AAAA", type="date", size = "30" })
            @Html.ValidationMessageFor(model => model.DateStart)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateEnd)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.DateEnd, new { @class="form-control", placeholder = "JJ/MM/AAAA", type="date", size = "30" })
            @Html.ValidationMessageFor(model => model.DateEnd)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Town)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Town, new { @class="form-control", size = "30" })
            @Html.ValidationMessageFor(model => model.Town)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Distance)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Distance, new { @class = "form-control", size = "30" })
            @Html.ValidationMessageFor(model => model.Distance)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdDifficulte)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.IdDifficulte, new { @class = "form-control", size = "30" })
            @Html.ValidationMessageFor(model => model.IdDifficulte)
            @Html.DropDownListFor(model => model.IdDifficulte, new SelectList(model.IdDifficulte, "", ""))
        </div>

        <p>
            <input type="submit" value="Créer la course" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

@section Scripts {

}
